"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var Sqlite = require("nativescript-sqlite");
var DbDemoComponent = /** @class */ (function () {
    function DbDemoComponent() {
        var _this = this;
        this.firstName = "";
        this.lastName = "";
        this.people = [];
        (new Sqlite("my.db")).then(function (db) {
            db.execSQL("CREATE TABLE IF NOT EXISTS people (id INTEGER PRIMARY KEY AUTOINCREMENT, firstname TEXT, lastname TEXT)").then(function (id) {
                _this.database = db;
            }, function (error) {
                console.log("CREATE TABLE ERROR", error);
            });
        }, function (error) {
            console.log("OPEN DB ERROR", error);
        });
    }
    DbDemoComponent.prototype.ngOnInit = function () {
    };
    DbDemoComponent.prototype.insert = function () {
        var _this = this;
        if (this.firstName.trim() === '') {
            alert('Please enter first name!');
            return;
        }
        if (this.lastName.trim() === '') {
            alert('Please enter last name!');
            return;
        }
        var textField = this.lastNameTextField.nativeElement;
        textField.dismissSoftInput();
        this.database.execSQL("INSERT INTO people (firstname, lastname) VALUES (?, ?)", [this.firstName.trim(), this.lastName.trim()]).then(function (id) {
            console.log("INSERT RESULT", id);
            _this.people.unshift({ id: id, firstName: _this.firstName, lastName: _this.lastName });
            _this.firstName = "";
            _this.lastName = "";
        }, function (error) {
            console.log("INSERT ERROR", error);
        });
    };
    DbDemoComponent.prototype.fetch = function () {
        var _this = this;
        this.database.all("SELECT * FROM people").then(function (rows) {
            _this.people = [];
            for (var row in rows) {
                _this.people.push({
                    "id": rows[row][0],
                    "firstname": rows[row][1],
                    "lastname": rows[row][2]
                });
            }
        }, function (error) {
            console.log("SELECT ERROR", error);
        });
    };
    DbDemoComponent.prototype.delete = function (args) {
        var _this = this;
        var person = args.object.bindingContext;
        this.database.execSQL("DELETE FROM people WHERE id=?", [person.id]).then(function () {
            var index = _this.people.indexOf(person);
            _this.people.splice(index, 1);
            console.log(" Item deleted successfully!");
        });
    };
    __decorate([
        core_1.ViewChild("lastNameTextField"),
        __metadata("design:type", core_1.ElementRef)
    ], DbDemoComponent.prototype, "lastNameTextField", void 0);
    DbDemoComponent = __decorate([
        core_1.Component({
            selector: 'ns-db-demo',
            templateUrl: './db-demo.component.html',
            styleUrls: ['./db-demo.component.css'],
            moduleId: module.id,
        }),
        __metadata("design:paramtypes", [])
    ], DbDemoComponent);
    return DbDemoComponent;
}());
exports.DbDemoComponent = DbDemoComponent;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGItZGVtby5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJkYi1kZW1vLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHNDQUF5RTtBQUl6RSxJQUFJLE1BQU0sR0FBRyxPQUFPLENBQUMscUJBQXFCLENBQUMsQ0FBQztBQVE1QztJQU9FO1FBQUEsaUJBV0M7UUFmRCxjQUFTLEdBQUcsRUFBRSxDQUFDO1FBQ2YsYUFBUSxHQUFHLEVBQUUsQ0FBQztRQUlWLElBQUksQ0FBQyxNQUFNLEdBQUcsRUFBRSxDQUFDO1FBQ2pCLENBQUMsSUFBSSxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBQSxFQUFFO1lBQ3pCLEVBQUUsQ0FBQyxPQUFPLENBQUMseUdBQXlHLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBQSxFQUFFO2dCQUN6SCxLQUFJLENBQUMsUUFBUSxHQUFHLEVBQUUsQ0FBQztZQUN2QixDQUFDLEVBQUUsVUFBQSxLQUFLO2dCQUNKLE9BQU8sQ0FBQyxHQUFHLENBQUMsb0JBQW9CLEVBQUUsS0FBSyxDQUFDLENBQUM7WUFDN0MsQ0FBQyxDQUFDLENBQUM7UUFDUCxDQUFDLEVBQUUsVUFBQSxLQUFLO1lBQ0osT0FBTyxDQUFDLEdBQUcsQ0FBQyxlQUFlLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDeEMsQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDO0lBRUQsa0NBQVEsR0FBUjtJQUNBLENBQUM7SUFFTSxnQ0FBTSxHQUFiO1FBQUEsaUJBc0JDO1FBckJHLElBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLEVBQUUsS0FBRyxFQUFFLEVBQUM7WUFDNUIsS0FBSyxDQUFDLDBCQUEwQixDQUFDLENBQUM7WUFDbEMsT0FBTztTQUNSO1FBQ0QsSUFBRyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRSxLQUFHLEVBQUUsRUFBQztZQUMzQixLQUFLLENBQUMseUJBQXlCLENBQUMs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dCwgVmlld0NoaWxkLCBFbGVtZW50UmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBUZXh0RmllbGQgfSBmcm9tIFwidG5zLWNvcmUtbW9kdWxlcy91aS90ZXh0LWZpZWxkXCI7XG5pbXBvcnQgeyBMaXN0Vmlld0V2ZW50RGF0YSwgUmFkTGlzdFZpZXcgfSBmcm9tIFwibmF0aXZlc2NyaXB0LXVpLWxpc3R2aWV3XCI7XG5cbnZhciBTcWxpdGUgPSByZXF1aXJlKFwibmF0aXZlc2NyaXB0LXNxbGl0ZVwiKTtcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbnMtZGItZGVtbycsXG4gIHRlbXBsYXRlVXJsOiAnLi9kYi1kZW1vLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vZGItZGVtby5jb21wb25lbnQuY3NzJ10sXG4gIG1vZHVsZUlkOiBtb2R1bGUuaWQsXG59KVxuZXhwb3J0IGNsYXNzIERiRGVtb0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIHByaXZhdGUgZGF0YWJhc2U6IGFueTtcbiAgcHVibGljIHBlb3BsZTogQXJyYXk8YW55PjtcbiAgZmlyc3ROYW1lID0gXCJcIjtcbiAgbGFzdE5hbWUgPSBcIlwiO1xuICBAVmlld0NoaWxkKFwibGFzdE5hbWVUZXh0RmllbGRcIikgbGFzdE5hbWVUZXh0RmllbGQ6IEVsZW1lbnRSZWY7XG5cbiAgcHVibGljIGNvbnN0cnVjdG9yKCkge1xuICAgICAgdGhpcy5wZW9wbGUgPSBbXTtcbiAgICAgIChuZXcgU3FsaXRlKFwibXkuZGJcIikpLnRoZW4oZGIgPT4ge1xuICAgICAgICAgIGRiLmV4ZWNTUUwoXCJDUkVBVEUgVEFCTEUgSUYgTk9UIEVYSVNUUyBwZW9wbGUgKGlkIElOVEVHRVIgUFJJTUFSWSBLRVkgQVVUT0lOQ1JFTUVOVCwgZmlyc3RuYW1lIFRFWFQsIGxhc3RuYW1lIFRFWFQpXCIpLnRoZW4oaWQgPT4ge1xuICAgICAgICAgICAgICB0aGlzLmRhdGFiYXNlID0gZGI7XG4gICAgICAgICAgfSwgZXJyb3IgPT4ge1xuICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIkNSRUFURSBUQUJMRSBFUlJPUlwiLCBlcnJvcik7XG4gICAgICAgICAgfSk7XG4gICAgICB9LCBlcnJvciA9PiB7XG4gICAgICAgICAgY29uc29sZS5sb2coXCJPUEVOIERCIEVSUk9SXCIsIGVycm9yKTtcbiAgICAgIH0pO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gIH1cblxuICBwdWJsaWMgaW5zZXJ0KCkge1xuICAgICAgaWYodGhpcy5maXJzdE5hbWUudHJpbSgpPT09Jycpe1xuICAgICAgICBhbGVydCgnUGxlYXNlIGVudGVyIGZpcnN0IG5hbWUhJyk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGlmKHRoaXMubGFzdE5hbWUudHJpbSgpPT09Jycpe1xuICAgICAgICBhbGVydCgnUGxlYXNlIGVudGVyIGxhc3QgbmFtZSEnKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgbGV0IHRleHRGaWVsZCA9IDxUZXh0RmllbGQ+dGhpcy5sYXN0TmFtZVRleHRGaWVsZC5uYXRpdmVFbGVtZW50O1xuICAgICAgdGV4dEZpZWxkLmRpc21pc3NTb2Z0SW5wdXQoKTtcbiAgICAgIFxuICAgICAgdGhpcy5kYXRhYmFzZS5leGVjU1FMKFxuICAgICAgICBcIklOU0VSVCBJTlRPIHBlb3BsZSAoZmlyc3RuYW1lLCBsYXN0bmFtZSkgVkFMVUVTICg/LCA/KVwiLCBcbiAgICAgICAgW3RoaXMuZmlyc3ROYW1lLnRyaW0oKSwgdGhpcy5sYXN0TmFtZS50cmltKCldKS50aGVuKGlkID0+IHtcbiAgICAgICAgICBjb25zb2xlLmxvZyhcIklOU0VSVCBSRVNVTFRcIiwgaWQpOyAgICAgICAgICBcbiAgICAgICAgICB0aGlzLnBlb3BsZS51bnNoaWZ0KHsgaWQ6IGlkLCBmaXJzdE5hbWU6IHRoaXMuZmlyc3ROYW1lLCBsYXN0TmFtZTp0aGlzLmxhc3ROYW1lIH0pO1xuICAgICAgICAgIHRoaXMuZmlyc3ROYW1lID0gXCJcIjtcbiAgICAgICAgICB0aGlzLmxhc3ROYW1lID0gXCJcIjtcbiAgICAgIH0sIGVycm9yID0+IHtcbiAgICAgICAgICBjb25zb2xlLmxvZyhcIklOU0VSVCBFUlJPUlwiLCBlcnJvcik7XG4gICAgICB9KTtcbiAgfVxuXG4gIHB1YmxpYyBmZXRjaCgpIHtcbiAgICAgIHRoaXMuZGF0YWJhc2UuYWxsKFwiU0VMRUNUICogRlJPTSBwZW9wbGVcIikudGhlbihyb3dzID0+IHtcbiAgICAgICAgICB0aGlzLnBlb3BsZSA9IFtdO1xuICAgICAgICAgIGZvcih2YXIgcm93IGluIHJvd3MpIHtcbiAgICAgICAgICAgICAgdGhpcy5wZW9wbGUucHVzaCh7XG4gICAgICAgICAgICAgICAgICBcImlkXCI6IHJvd3Nbcm93XVswXSxcbiAgICAgICAgICAgICAgICAgIFwiZmlyc3RuYW1lXCI6IHJvd3Nbcm93XVsxXSxcbiAgICAgICAgICAgICAgICAgIFwibGFzdG5hbWVcIjogcm93c1tyb3ddWzJdXG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cbiAgICAgIH0sIGVycm9yID0+IHtcbiAgICAgICAgICBjb25zb2xlLmxvZyhcIlNFTEVDVCBFUlJPUlwiLCBlcnJvcik7XG4gICAgICB9KTtcbiAgfVxuXG4gIGRlbGV0ZShhcmdzOiBMaXN0Vmlld0V2ZW50RGF0YSkge1xuXHRcdGxldCBwZXJzb24gPSA8YW55PmFyZ3Mub2JqZWN0LmJpbmRpbmdDb250ZXh0O1xuXHRcdHRoaXMuZGF0YWJhc2UuZXhlY1NRTChcIkRFTEVURSBGUk9NIHBlb3BsZSBXSEVSRSBpZD0/XCIsIFtwZXJzb24uaWRdKS50aGVuKCgpID0+IHtcblx0XHRcdGxldCBpbmRleCA9IHRoaXMucGVvcGxlLmluZGV4T2YocGVyc29uKTtcblx0XHRcdHRoaXMucGVvcGxlLnNwbGljZShpbmRleCwgMSk7XG5cdFx0XHRjb25zb2xlLmxvZyhcIiBJdGVtIGRlbGV0ZWQgc3VjY2Vzc2Z1bGx5IVwiKVxuXHRcdH0pO1xuXG5cdH1cbn1cbiJdfQ==